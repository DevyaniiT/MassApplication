@using MassApplication.Models.Graph;
@model IEnumerable<ChartParameters>
<style>
    #stickyContainer {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        grid-template-rows: repeat(3, 1fr);
    }
</style>

<div id="main-container" class="row ml-3 mr-3 pt-4" style="height:280px;background:@ViewBag.LabelColor;color:#000;border-radius:8px;">
</div>

<script>
    $(function () {
        var labelValueList = @Html.Raw(Json.Encode(Model.Select(x => x.labelplotvalues)));
        var labelNameList = @Html.Raw(Json.Encode(Model.Select(x => x.labelplotname)));
        var labelAlignList = @Html.Raw(Json.Encode(Model.Select(x => x.labelAlignment)));
        var labelColor = '@ViewBag.LabelColor';

        var newNote = "";
        var newDiv = $('<div class="container" id="stickyContainer"></div>').appendTo('#main-container');
        for (var i = 0; i < labelValueList.length; i++) {
            newNote = $('<div class="col" id="sticky' + i + '">'
                + '<div class="row">'
                + '<div class="col-sm-10">'
                //+ '<h3 style="font-size:40px; overflow:hidden; font-weight:500; color:#fff; padding:10px;">' + parseFloat(labelValueList[i]).toFixed(5) + '</h3>'
                + '<h3 style="font-size:40px; overflow:hidden; font-weight:500; color:#fff; padding:10px;">' + labelValueList[i] + '</h3>'
                + '<p class="text-white pl-3" style="font-size:20px; font-weight:500;">' + labelNameList[i].replaceAll("+"," ") + '</p>'
                + '</div>'
                //+ '<div class="col-sm-2">'
                //+ '<div class="float-right">'
                //+ '<i class="fas fa-signal" style="color:#fff; font-size:60px"></i>'
                //+ '</div></div>'
                + '</div></div>');

            $(newDiv).append(newNote);

            var alignVal = labelAlignList[i];
            var alignDataSet = getAlignmentValue(alignVal);
            $('#sticky' + i).css('grid-row', alignDataSet[0]);
            $('#sticky' + i).css('grid-column', alignDataSet[1]);
        }
        function getAlignmentValue(alignValue) {
            var alignSet = [];
            if (alignValue == 'ul') {
                alignSet.push('1', '1');
            }
            else if (alignValue == 'um') {
                alignSet.push('1', '2');
            }
            else if (alignValue == 'ur') {
                alignSet.push('1', '3');
            }
            else if (alignValue == 'll') {
                alignSet.push('3', '1');
            }
            else if (alignValue == 'lm') {
                alignSet.push('3', '2');
            }
            else if (alignValue == 'lr') {
                alignSet.push('3', '3');
            }
            else if (alignValue == 'ml') {
                alignSet.push('2', '1');
            }
            else if (alignValue == 'mm') {
                alignSet.push('2', '2');
            }
            else if (alignValue == 'mr') {
                alignSet.push('2', '3');
            }
            else { }

            return alignSet;
        }
    });
</script>